diff --git a/node_modules/react-native-web/dist/cjs/exports/StyleSheet/ReactNativePropRegistry.js b/node_modules/react-native-web/dist/cjs/exports/StyleSheet/ReactNativePropRegistry.js
index cdc81a1..aa2f999 100644
--- a/node_modules/react-native-web/dist/cjs/exports/StyleSheet/ReactNativePropRegistry.js
+++ b/node_modules/react-native-web/dist/cjs/exports/StyleSheet/ReactNativePropRegistry.js
@@ -34,7 +34,9 @@ function () {
     }
 
     var key = createKey(id);
+    console.warn('üöÄ', objects)
     objects[key] = object;
+    console.warn('üöÄ', objects)
     return id;
   };
 
@@ -46,7 +48,9 @@ function () {
     }
 
     var key = createKey(id);
+    console.warn('üöÄ', objects)
     var object = objects[key];
+    console.warn('üöÄ', objects)
 
     if (!object) {
       console.warn('Invalid style with id `' + id + '`. Skipping ...');
diff --git a/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativePropRegistry.js b/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativePropRegistry.js
index 7edef72..e0fd801 100644
--- a/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativePropRegistry.js
+++ b/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativePropRegistry.js
@@ -29,7 +29,9 @@ function () {
     }
 
     var key = createKey(id);
+    console.warn('üöÄ', objects)
     objects[key] = object;
+    console.warn('üöÄ', objects)
     return id;
   };
 
@@ -41,7 +43,9 @@ function () {
     }
 
     var key = createKey(id);
+    console.warn('üöÄ', objects)
     var object = objects[key];
+    console.warn('üöÄ', objects)
 
     if (!object) {
       console.warn('Invalid style with id `' + id + '`. Skipping ...');
diff --git a/node_modules/react-native-web/src/exports/StyleSheet/ReactNativePropRegistry.js b/node_modules/react-native-web/src/exports/StyleSheet/ReactNativePropRegistry.js
index b461663..b1f6f68 100644
--- a/node_modules/react-native-web/src/exports/StyleSheet/ReactNativePropRegistry.js
+++ b/node_modules/react-native-web/src/exports/StyleSheet/ReactNativePropRegistry.js
@@ -17,6 +17,7 @@ const createKey = id => `${prefix}-${id}`;
 
 export default class ReactNativePropRegistry {
   static register(object: Object): number {
+    console.warn(objects);
     const id = uniqueID++;
     if (process.env.NODE_ENV !== 'production') {
       Object.freeze(object);
@@ -27,6 +28,8 @@ export default class ReactNativePropRegistry {
   }
 
   static getByID(id: number): Object {
+    console.warn(objects);
+    console.warn(üçÄ, id);
     if (!id) {
       // Used in the style={[condition && id]} pattern,
       // we want it to be a no-op when the value is false or null
@@ -34,6 +37,7 @@ export default class ReactNativePropRegistry {
     }
     const key = createKey(id);
     const object = objects[key];
+    console.warn(üöÄ, key, object);
     if (!object) {
       console.warn('Invalid style with id `' + id + '`. Skipping ...');
       return emptyObject;
